{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Flipper is an animation library for Roblox based around Motors and Goals. Under Construction This page is under construction. Further reading This page is current used to showcase call-outs. What's a call-out? Call-outs are these boxes that you are reading. Open me! These call-outs - also called admonitions - can also be expanded. You can close me (after reading!) They can also be collapsible and forced open, too. This docs page was made by @ShaneButt, @jakebball11, and @zaiisao. We saw a need and decided to take the time to properly document this module. You can link to URLs and other pages It's really simple to link to other pages in call-outs. Just wrap your text with [ and ]({link}) where {link} is the URL or page to link to. License Flipper is licensed in full under the MIT license . Note that it contains code from another author, which is also under the MIT license.","title":"Home"},{"location":"#license","text":"Flipper is licensed in full under the MIT license . Note that it contains code from another author, which is also under the MIT license.","title":"License"},{"location":"installation/","text":"Installation Rojo 0.6.x+ Add this repository as a submodule into your packages directory. This example assumes the directory is packages . git submodule add https://github.com/Reselim/Flipper packages/Flipper 0.5.x Copy the src folder from this repository into your packages directory. npm (for roblox-ts) Install the @rbxts/flipper package using npm or yarn . npm i @rbxts/flipper Without Rojo Download the latest .rbxm file from the releases page and drag it into studio.","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#rojo","text":"","title":"Rojo"},{"location":"installation/#06x","text":"Add this repository as a submodule into your packages directory. This example assumes the directory is packages . git submodule add https://github.com/Reselim/Flipper packages/Flipper","title":"0.6.x+"},{"location":"installation/#05x","text":"Copy the src folder from this repository into your packages directory.","title":"0.5.x"},{"location":"installation/#npm-for-roblox-ts","text":"Install the @rbxts/flipper package using npm or yarn . npm i @rbxts/flipper","title":"npm (for roblox-ts)"},{"location":"installation/#without-rojo","text":"Download the latest .rbxm file from the releases page and drag it into studio.","title":"Without Rojo"},{"location":"api/reference/","text":"","title":"Reference"},{"location":"guide/example/","text":"Usage With Roact This example creates a button that shrinks when pressed. local Example = Roact . Component : extend ( \"Example\" ) function Example : init () self . motor = Flipper . SingleMotor . new ( 0 ) local binding , setBinding = Roact . createBinding ( self . motor : getValue ()) self . binding = binding self . motor : onStep ( setBinding ) end function Example : render () return Roact . createElement ( \"ImageButton\" , { Size = self . binding : map ( function ( value ) return UDim2 . new ( 0 , 100 , 0 , 100 ): Lerp ( UDim2 . new ( 0 , 80 , 0 , 80 ), value ) end ), Position = UDim2 . new ( 0.5 , 0 , 0.5 , 0 ), AnchorPoint = Vector2 . new ( 0.5 , 0.5 ), [ Roact . Event . MouseButton1Down ] = function () self . motor : setGoal ( Flipper . Spring . new ( 1 , { frequency = 5 , dampingRatio = 1 })) end , [ Roact . Event . MouseButton1Up ] = function () self . motor : setGoal ( Flipper . Spring . new ( 0 , { frequency = 4 , dampingRatio = 0.75 })) end }) end return Example Flipper works wonderfully with Roact on its own, but if you plan on using it for a lot of your components, roact-flipper will make that much easier. Without Roact Check out the demo script in the test project!","title":"Example Usage"},{"location":"guide/example/#usage","text":"","title":"Usage"},{"location":"guide/example/#with-roact","text":"This example creates a button that shrinks when pressed. local Example = Roact . Component : extend ( \"Example\" ) function Example : init () self . motor = Flipper . SingleMotor . new ( 0 ) local binding , setBinding = Roact . createBinding ( self . motor : getValue ()) self . binding = binding self . motor : onStep ( setBinding ) end function Example : render () return Roact . createElement ( \"ImageButton\" , { Size = self . binding : map ( function ( value ) return UDim2 . new ( 0 , 100 , 0 , 100 ): Lerp ( UDim2 . new ( 0 , 80 , 0 , 80 ), value ) end ), Position = UDim2 . new ( 0.5 , 0 , 0.5 , 0 ), AnchorPoint = Vector2 . new ( 0.5 , 0.5 ), [ Roact . Event . MouseButton1Down ] = function () self . motor : setGoal ( Flipper . Spring . new ( 1 , { frequency = 5 , dampingRatio = 1 })) end , [ Roact . Event . MouseButton1Up ] = function () self . motor : setGoal ( Flipper . Spring . new ( 0 , { frequency = 4 , dampingRatio = 0.75 })) end }) end return Example Flipper works wonderfully with Roact on its own, but if you plan on using it for a lot of your components, roact-flipper will make that much easier.","title":"With Roact"},{"location":"guide/example/#without-roact","text":"Check out the demo script in the test project!","title":"Without Roact"}]}